<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <name>${project.artifactId}</name>
  <groupId>com.github.daggerok.payaramicro</groupId>
  <artifactId>payara-micrio-example</artifactId>
  <version>3.0.6-SNAPSHOT</version>
  <packaging>war</packaging>

  <properties>
    <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>

    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <h2.version>1.4.200</h2.version>
    <jaxb.version>2.3.0</jaxb.version>
    <log4j.version>2.12.1</log4j.version>
    <javaee.version>8.0.1</javaee.version>
    <junit.version>5.6.0-M1</junit.version>
    <lombok.version>1.18.10</lombok.version>
    <assertj.version>3.14.0</assertj.version>
    <liquibase.version>4.8.0</liquibase.version>
    <microprofile.version>3.2</microprofile.version>
    <payara.micro.version>5.192</payara.micro.version>
    <materializecss.version>1.0.0</materializecss.version>
    <maven-war-plugin.version>3.2.3</maven-war-plugin.version>
    <javax.persistence-api.version>2.2</javax.persistence-api.version>
    <material-design-icons.version>3.0.1</material-design-icons.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <payara-micro-maven-plugin.version>1.0.6</payara-micro-maven-plugin.version>
    <jackson-jaxrs-json-provider.version>2.10.1</jackson-jaxrs-json-provider.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.eclipse.microprofile</groupId>
        <artifactId>microprofile</artifactId>
        <version>${microprofile.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>${log4j.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- liquibase -->
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <version>${liquibase.version}</version>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-cdi</artifactId>
      <version>${liquibase.version}</version>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>javax.persistence-api</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
      <version>${javax.persistence-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.microprofile</groupId>
      <artifactId>microprofile</artifactId>
      <version>${microprofile.version}</version>
      <optional>true</optional>
      <scope>provided</scope>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>${javaee.version}</version>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>${jackson-jaxrs-json-provider.version}</version>
    </dependency>

    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>material-design-icons</artifactId>
      <version>${material-design-icons.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>materializecss</artifactId>
      <version>${materializecss.version}</version>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- Read this: https://blog.payara.fish/using-the-payara-micro-maven-plugin -->

  <build>
    <defaultGoal>clean package</defaultGoal>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <compilerArguments>
            <endorseddirs>${endorsed.dir}</endorseddirs>
          </compilerArguments>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>fish.payara.maven.plugins</groupId>
          <artifactId>payara-micro-maven-plugin</artifactId>
          <version>${payara-micro-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>bundle</id>
      <build><!-- ./mvnw -Pbundle # ./mvnw payara-micro:bundle -->
        <defaultGoal>clean package payara-micro:bundle</defaultGoal>
        <plugins>
          <plugin>
            <groupId>fish.payara.maven.plugins</groupId>
            <artifactId>payara-micro-maven-plugin</artifactId>
            <version>${payara-micro-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>bundle</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <payaraVersion>${payara.micro.version}</payaraVersion>
              <commandLineOptions>
                <option>
                  <key>--autobindhttp</key>
                  <value>true</value>
                </option>
                <option>
                  <key>--clusterName</key>
                  <value>app</value>
                </option>
              </commandLineOptions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>start</id>
      <build><!-- ./mvnw -Pstart # ./mvnw payara-micro:start -->
        <defaultGoal>payara-micro:start</defaultGoal>
        <plugins>
          <plugin>
            <groupId>fish.payara.maven.plugins</groupId>
            <artifactId>payara-micro-maven-plugin</artifactId>
            <version>${payara-micro-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <payaraVersion>${payara.micro.version}</payaraVersion>
              <useUberJar>true</useUberJar>
              <javaCommandLineOptions>
                <option>
                  <key>-Dlogging.level.liquibase</key>
                  <value>INFO</value>
                </option>
                <option>
                  <key>-Xrunjdwp:transport</key>
                  <value>dt_socket,server=y,suspend=n,address=5005</value>
                </option>
              </javaCommandLineOptions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>debug</id>
      <build><!-- ./mvnw -Pstart # ./mvnw payara-micro:start -->
        <defaultGoal>payara-micro:start</defaultGoal>
        <plugins>
          <plugin>
            <groupId>fish.payara.maven.plugins</groupId>
            <artifactId>payara-micro-maven-plugin</artifactId>
            <version>${payara-micro-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <payaraVersion>${payara.micro.version}</payaraVersion>
              <useUberJar>true</useUberJar>
              <javaCommandLineOptions>
                <option>
                  <value>-Xdebug</value>
                </option>
                <option>
                  <key>-Xrunjdwp:transport</key>
                  <value>dt_socket,server=y,suspend=y,address=5005</value>
                </option>
              </javaCommandLineOptions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>jdk11+</id>
      <activation>
        <jdk>[11,)</jdk>
      </activation>
      <properties>
        <java.version>11</java.version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
          <version>2.4.0-b180830.0359</version>
        </dependency>
        <dependency>
          <groupId>org.glassfish.jaxb</groupId>
          <artifactId>jaxb-runtime</artifactId>
          <version>2.4.0-b180830.0438</version>
        </dependency>
      </dependencies>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>${maven-compiler-plugin.version}</version>
              <configuration>
                <release>${java.version}</release>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>${maven-surefire-plugin.version}</version>
              <configuration>
                <argLine>
                  --illegal-access=permit
                </argLine>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <version>${maven-failsafe-plugin.version}</version>
              <configuration>
                <argLine>
                  --illegal-access=permit
                </argLine>
              </configuration>
            </plugin>
            <plugin>
              <groupId>fish.payara.maven.plugins</groupId>
              <artifactId>payara-micro-maven-plugin</artifactId>
              <version>${payara-micro-maven-plugin.version}</version>
              <configuration>
                <javaCommandLineOptions>
                  <option>
                    <value>-Xdebug</value>
                  </option>
                  <option>
                    <key>-Xrunjdwp:transport</key>
                    <value>dt_socket,server=y,suspend=y,address=5005</value>
                  </option>
                  <option>
                    <value>--illegal-access=permit</value>
                  </option>
                  <option>
                    <key>--add-modules</key>
                    <value>java.se</value>
                  </option>
                  <option>
                    <key>--add-exports</key>
                    <value>java.base/jdk.internal.ref=ALL-UNNAMED</value>
                  </option>
                  <option>
                    <key>--add-opens</key>
                    <value>java.base/java.lang=ALL-UNNAMED</value>
                  </option>
                  <option>
                    <key>--add-opens</key>
                    <value>java.base/java.nio=ALL-UNNAMED</value>
                  </option>
                  <option>
                    <key>--add-opens</key>
                    <value>java.base/sun.nio.ch=ALL-UNNAMED</value>
                  </option>
                  <option>
                    <key>--add-opens</key>
                    <value>java.management/sun.management=ALL-UNNAMED</value>
                  </option>
                  <option>
                    <key>--add-opens</key>
                    <value>jdk.management/com.sun.management.internal=ALL-UNNAMED</value>
                  </option>
                  <!-- https://github.com/java-decompiler/jd-gui/issues/187 -->
                  <option>
                    <key>--add-opens</key>
                    <value>java.base/jdk.internal.loader=ALL-UNNAMED</value>
                  </option>
                  <option>
                    <key>--add-opens</key>
                    <value>jdk.zipfs/jdk.nio.zipfs=ALL-UNNAMED</value>
                  </option>
                </javaCommandLineOptions>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
